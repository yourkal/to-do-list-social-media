{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Todo API Documentation",
        "description": "Dokumentasi API untuk manajemen posting to-do list",
        "contact": {
            "email": "haikalridha07@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "description": "Returns list of posts",
                "operationId": "getPostsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create new post",
                "description": "Creates a new post",
                "operationId": "storePost",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get single post",
                "description": "Returns a single post by ID",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "description": "Updates a post by ID",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "description": "Deletes a post by ID",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Post": {
                "title": "Post",
                "description": "Model for social media post",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "New Campaign"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Brand A"
                    },
                    "platform": {
                        "type": "string",
                        "example": "Instagram"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-10"
                    },
                    "payment": {
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Posts",
            "description": "Posts"
        }
    ]
}